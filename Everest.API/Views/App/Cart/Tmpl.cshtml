@using Everest.API
@using Everest.Domain
@{
    @using (var template = Html.Incoding().Template<GetCartItemsByCurrentUserQuery.Response>())
    {
        @using (template.NotEach())
        {
            <div>@DataResource.Empty</div>
        }

        @using (var each = template.ForEach())
        {
            <div class="product">
            <span>
                @string.Format("${0:N2}", each.For(q => q.Price)) 
            </span>

            <div class="position-relative">
                <div class="d-flex position-absolute top-05 left-05 gap-05">
                    <span class="bg-yellow rounded padding-x-05">
                            @each.For(q => q.Product)
                    </span>
                </div>

                <img src="@(Url.Dispatcher().Query<GetAvatarProductQuery>(new { Id = each.For(q => q.ProductId) }).AsFile(incContentType: "image/jpeg", incFileDownloadName: "avatar"))" class="width-15 height-15 rounded">
            </div>

            @(Html.When(JqueryBind.Click)
                .Ajax(Url.Dispatcher()
                    .Push<DeleteCartItemCommand>
                    (new { Id = each.For(q => q.Id) }))
                    .OnBegin(dsl => dsl.Break.If(() => !Selector.JS.Confirm("Are you sure delete ?")))
                    .OnSuccess(dsl =>
                    {
                    //  выводим количество товаров в корзине
                    dsl.WithId("check").Insert.Use(Selector.Jquery.Class("product").Length()).Text();
                        // $('#check').text($('.product').length)

                    //  обновляем содержимое корзины
                        dsl.WithId(nameof(GetCartItemsByCurrentUserQuery)).Trigger.Incoding();
                    })
                    .AsHtmlAttributes(new { @class = "btn btn-danger align-self-center" })
                    .ToLink(@<span><span class="material-symbols-outlined">delete</span>@DataResource.DeleteFromCart</span>))
         </div>
        }
    }
}
